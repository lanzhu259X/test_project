<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lanzhu.testwork.dao.UserAuthMapper" >
  <resultMap id="BaseResultMap" type="com.lanzhu.testwork.model.UserAuth" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="identifier" property="identifier" jdbcType="VARCHAR" />
    <result column="identifier_type" property="identifierType" jdbcType="VARCHAR" />
    <result column="credential" property="credential" jdbcType="VARCHAR" />
    <result column="verified" property="verified" jdbcType="BIT" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, identifier, identifier_type, credential, verified, created_time, updated_time, 
    created_by, updated_by
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user_auths
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user_auths
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lanzhu.testwork.model.UserAuth" keyProperty="id" useGeneratedKeys="true" >
    insert into t_user_auths (user_id, identifier,
      identifier_type, credential, verified, 
      created_time, updated_time, created_by, 
      updated_by)
    values (#{userId,jdbcType=INTEGER}, #{identifier,jdbcType=VARCHAR},
      #{identifierType,jdbcType=VARCHAR}, #{credential,jdbcType=VARCHAR}, #{verified,jdbcType=BIT}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, 
      #{updatedBy,jdbcType=VARCHAR})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.lanzhu.testwork.model.UserAuth" >
    update t_user_auths
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="identifier != null" >
        identifier = #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="identifierType != null" >
        identifier_type = #{identifierType,jdbcType=VARCHAR},
      </if>
      <if test="credential != null" >
        credential = #{credential,jdbcType=VARCHAR},
      </if>
      <if test="verified != null" >
        verified = #{verified,jdbcType=BIT},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>